/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Ray Mosaid
 */

/*
    Saya Mohammad Ray Mosaid mengerjakan Latihan 5 dalam mata kuliah DPBO
    untuk keberkahanNya maka saya tidak melakukan kecurangan seperti yang telah dispesifikasikan.
    Aamiin.
*/

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

public class MainJFrame extends javax.swing.JFrame {
    private DefaultTableModel dtm;
    private Boolean isUpdate = false;
    private int selectedID = -1;
    private ArrayList<Student> listStudent;
    
    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        //constructors
        initComponents();
        
        //Memebuat list untuk menampung data mahasiswa
        listStudent = new ArrayList<>();
        
        //Dummy
        listStudent.add(new Student("2004942", "Mohammad Ray Mosaid", "A", "Ilmu Komputer"));
        listStudent.add(new Student("2005319", "Adinda Salsabilla", "S++", "Ilmu Komputer"));
        listStudent.add(new Student("1234567", "Jackson", "B", "Pendidikan Ilmu Komputer"));
        
        //Set Table
        studentTable.setModel(setTable());
        
        //Hide Delete Button
        deleteButton.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nimTextField = new javax.swing.JTextField();
        nameTextField = new javax.swing.JTextField();
        gradeTextField = new javax.swing.JTextField();
        titleText = new javax.swing.JLabel();
        nameText = new javax.swing.JLabel();
        nimText = new javax.swing.JLabel();
        gradeText = new javax.swing.JLabel();
        programText = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        programDropdown = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        studentTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 255));

        nimTextField.setBackground(java.awt.Color.white);
        nimTextField.setForeground(new java.awt.Color(0, 0, 0));
        nimTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nimTextFieldActionPerformed(evt);
            }
        });

        nameTextField.setBackground(java.awt.Color.white);
        nameTextField.setForeground(new java.awt.Color(0, 0, 0));
        nameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextFieldActionPerformed(evt);
            }
        });

        gradeTextField.setBackground(java.awt.Color.white);
        gradeTextField.setForeground(new java.awt.Color(0, 0, 0));
        gradeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gradeTextFieldActionPerformed(evt);
            }
        });

        titleText.setFont(new java.awt.Font("Poppins", 1, 30)); // NOI18N
        titleText.setText("Daftar Mahasiswa");
        titleText.setAlignmentY(0.0F);

        nameText.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        nameText.setText("Nama");

        nimText.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        nimText.setText("NIM");

        gradeText.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        gradeText.setText("Nilai");

        programText.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        programText.setText("Jurusan");

        addButton.setBackground(new java.awt.Color(255, 255, 255));
        addButton.setForeground(new java.awt.Color(0, 0, 0));
        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        cancelButton.setBackground(new java.awt.Color(255, 255, 255));
        cancelButton.setForeground(new java.awt.Color(0, 0, 0));
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(255, 255, 255));
        deleteButton.setForeground(new java.awt.Color(0, 0, 0));
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        programDropdown.setBackground(new java.awt.Color(255, 255, 255));
        programDropdown.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        programDropdown.setForeground(new java.awt.Color(0, 0, 0));
        programDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ilmu Komputer", "Pendidikan Ilmu Komputer" }));
        programDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                programDropdownActionPerformed(evt);
            }
        });

        studentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        studentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(studentTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nimText)
                            .addComponent(gradeText)
                            .addComponent(programText)
                            .addComponent(nameText))
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nimTextField)
                            .addComponent(gradeTextField)
                            .addComponent(nameTextField)
                            .addComponent(programDropdown, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deleteButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cancelButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addButton))))
                .addGap(49, 49, 49))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(titleText)
                .addGap(151, 151, 151))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(titleText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameText)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nimText)
                    .addComponent(nimTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gradeText)
                    .addComponent(gradeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(programDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(programText))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nimTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nimTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nimTextFieldActionPerformed

    private void nameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextFieldActionPerformed

    private void gradeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gradeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gradeTextFieldActionPerformed

    // Mengeset tombol add jika diklik
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        // Jika isUpdate adalah false (tidak memilih data di tabel) lakukan proses di bawah
        if(isUpdate == false){
            // Tambah data
            insertData();
        }
        // Jika isUpdate adalah true (memilih data di tabel) lakukan proses di bawah
        else{
            // Update data
            updateData();
            // Kembalikan tulisan tombol add yang tadinya update menjadi add
            addButton.setText("Add");
            // Kembalikan tombol delete menjdai invisible
            deleteButton.setVisible(false);
            // Ubah status isUpdate menjadi false
            this.isUpdate = false;
        }
    }//GEN-LAST:event_addButtonActionPerformed

    // Mengeset tombol cancel jika diklik
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        // Reset form
        resetForm();
        // Kembalikan tulisan tombol add yang tadinya update menjadi add
        addButton.setText("Add");
        // Kembalikan tombol delete menjdai invisible
        deleteButton.setVisible(false);
        // Ubah status isUpdate menjadi false
        this.isUpdate = false;
    }//GEN-LAST:event_cancelButtonActionPerformed

    // Mengeset tombol delete jika diklik
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        if(isUpdate == true){
            // Hapus data
            deleteData();
            // Kembalikan tulisan tombol add yang tadinya update menjadi add
            addButton.setText("Add");
            // Kembalikan tombol delete menjdai invisible
            deleteButton.setVisible(false);
            // Ubah status isUpdate menjadi false
            this.isUpdate = false;
            
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    //Mengeset form jika data di tabel diklik
    private void studentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentTableMouseClicked
        // TODO add your handling code here:
        // Jika data di tabel diklik maka status update akan diubah menjadi true
        this.isUpdate = true;
        
        // Get Selected Data
        int row = studentTable.getSelectedRow();
        String selectedNim = (studentTable.getModel().getValueAt(row, 0).toString());
        String selectedName = (studentTable.getModel().getValueAt(row, 1).toString());
        String selectedGrade = (studentTable.getModel().getValueAt(row, 2).toString());
        String selectedProgram = (studentTable.getModel().getValueAt(row, 3).toString());
        
        // Mengambil nomor urut selectedID di tabel, agar saat update dan delete bisa sesuai dengan data yang dipilih di tabel
        for(int i = 0; i < listStudent.size(); i++){
            if(selectedNim.equals(listStudent.get(i).getNim())){
                selectedID = i;
                break;
            }
        }
        
        // Mengubah Textfield dan Dropdown menjadi sesuai dengan data yang dipilih di tabel
        nimTextField.setText(selectedNim);
        nameTextField.setText(selectedName);
        gradeTextField.setText(selectedGrade);
        programDropdown.setSelectedItem(selectedProgram);
        
        addButton.setText("Update"); // Mengubah tulisan tombol add menjadi update, untuk update data
        deleteButton.setVisible(true); // Memunculkan tombol delete
    }//GEN-LAST:event_studentTableMouseClicked

    /*
        NOTE!!!
        Untuk dropdown di-set di bagian design, dan hasilnya bisa dilihat di line 147
    */
    private void programDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_programDropdownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_programDropdownActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel gradeText;
    private javax.swing.JTextField gradeTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameText;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JLabel nimText;
    private javax.swing.JTextField nimTextField;
    private javax.swing.JComboBox<String> programDropdown;
    private javax.swing.JLabel programText;
    private javax.swing.JTable studentTable;
    private javax.swing.JLabel titleText;
    // End of variables declaration//GEN-END:variables

    // Fungsi untuk memperbaharui tabel
    public final TableModel setTable() {
        // Column Title
        Object[] column = {"NIM", "Nama", "Nilai", "Program Studi"};
        DefaultTableModel dataTable = new DefaultTableModel(null, column);
        
        // Menyetel Data tabel perbaris
        for(int i = 0; i < listStudent.size(); i++){
            Object[] row = new Object[4];
            row[0] = listStudent.get(i).getNim();
            row[1] = listStudent.get(i).getName();
            row[2] = listStudent.get(i).getGrade();
            row[3] = listStudent.get(i).getProgram();
            
            // Memasukkan data ke tabel
            dataTable.addRow(row);
        }
        // Mereturn tabel yang sudah diperbaharui
        return dataTable;
    }
    
    // Prosedur untuk menambahkan data baru
    public void insertData(){
        // Get data from text field
        String nim = nimTextField.getText();
        String name = nameTextField.getText();
        String grade = gradeTextField.getText();
        String program = (String) programDropdown.getSelectedItem();
        
        // Add new data to to list
        listStudent.add(new Student(nim, name, grade, program));
        
        // Reset Form
        resetForm();
        
        // Update Table
        studentTable.setModel(setTable());
        
        // Show Information
        System.out.println("Insert Success!");
        JOptionPane.showMessageDialog(null, "Data berhasil ditambahkan!");
    }
    
    // Prosedur untuk mengubah data
    public void updateData(){
        //Get data from text field
        String nim = nimTextField.getText();
        String name = nameTextField.getText();
        String grade = gradeTextField.getText();
        String program = (String) programDropdown.getSelectedItem();
        
        //Set Data to Object
        listStudent.get(selectedID).setNim(nim);
        listStudent.get(selectedID).setName(name);
        listStudent.get(selectedID).setGrade(grade);
        listStudent.get(selectedID).setProgram(program);
        
        //Reset Form
        resetForm();
        
        //Update Table
        studentTable.setModel(setTable());
        
        //Show Information
        System.out.println("Update Success!");
        JOptionPane.showMessageDialog(null, "Data berhasil diubah!");
    }
 
    // Prosedur untuk menghapus data
    public void deleteData(){
        // Confirm Dialog
        int result = JOptionPane.showConfirmDialog(this, "Are you sure want to delete", "swing tester", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        // Jika user memilih "yes" maka lakukan proses di bawah
        if(result == JOptionPane.YES_OPTION){
            // Remove Data from List
            listStudent.remove(selectedID);

            // Reset Form
            resetForm();

            // Update Table
            studentTable.setModel(setTable());

            // Show Information
            System.out.println("Delete Success!");
            JOptionPane.showMessageDialog(null, "Data berhasil dihapus!");
        }
        // jika user memilih "no" lakukan proses di bawah
        else if(result == JOptionPane.NO_OPTION){
            //Reset Form
            resetForm();
            
            //Show Information
            System.out.println("Delete Abort!");
            JOptionPane.showMessageDialog(null, "Data batal dihapus!");
        }
        
    }
    
    // Prosedur untuk mereset form
    public void resetForm(){
        
        //Reset Form
        nimTextField.setText("");
        nameTextField.setText("");
        gradeTextField.setText("");
        
        //Show Information
        System.out.println("Cancel Success!");
    }
}
